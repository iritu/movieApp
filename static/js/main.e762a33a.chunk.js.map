{"version":3,"sources":["model/moviesClass.jsx","movieCard.jsx","pages/Movies/MoviesList.jsx","pCard.jsx","model/personClass.jsx","pages/Cards/CardsLine.jsx","pages/PersonCards.jsx","pages/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["MovieModel","MovieName","LengthInMinutes","PosterImage","Director","MainStars","this","MovieCardComponent","imgsrc","pathPre","className","src","alt","map","person","index","MoviesList","useState","movies","setMovies","useEffect","moviesData","movie","moviesCards","PersonCardComponent","PersonModel","Image","FirstName","LastName","type","onClick","e","preventDefault","window","location","href","Link","age","BirthDay","CalcAge","today","Date","datestamp","parse","birthDate","getFullYear","cardsLine","PersonCards","props","filterText","setFilterText","sortBy","setSortBy","persons","setPersons","usersData","filtererdActors","filter","actor","toLowerCase","includes","sort","actor1","actor2","placeholder","value","onChange","target","CardsLine","HomePage","App","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e762a33a.chunk.js","sourcesContent":["class MovieModel {\n    constructor(MovieName, LengthInMinutes, PosterImage, Director, MainStars) {\n        this.MovieName = MovieName;\n        this.LengthInMinutes = LengthInMinutes;\n        this.PosterImage = PosterImage;\n        this.Director = Director;\n        this.MainStars = MainStars;\n    }\n}\n\nexport default MovieModel ;\n\n\n\n\n \n \n","// generate one card\n\nfunction MovieCardComponent({MovieModel}){\n\n    const pathPre = process.env.PUBLIC_URL;\n  \n    const  imgsrc = pathPre +\"/\" + MovieModel.PosterImage; //pathPre.concat(PersonModel.Image);\n  \n      return(\n        <div className=\"row movieCardRow\">\n            <div className=\"col-sm\">\n                <h2>{MovieModel.MovieName}</h2>\n                <img src={imgsrc} className=\"card-img-top imgCard\" alt={MovieModel.MovieName} />\n                <br/>\n                <h5 className=\"card-title\">Director: {MovieModel.Director}</h5>\n            </div>\n            <div className=\"col-sm\">\n                <br/>\n                Time: (min.)  {MovieModel.LengthInMinutes} \n                <h4>Main Actors</h4>\n                      <ul className=\"actorsList\">\n                       {MovieModel.MainStars.map((person, index) => (\n                            <li key={index}> {person} </li>\n                        ))}\n                      </ul>\n              </div>\n        </div>  \n      )\n    }\n    \n  \n    export default MovieCardComponent;\n    ","import { useEffect, useState } from 'react';\n//movies imports\nimport moviesData from '../../movies.json';\nimport MovieModel from '../../model/moviesClass.jsx';\nimport MovieCardComponent from '../../movieCard.jsx';\n\n//This page renders when: http://localhost:3000/#/MoviesList\n\n\nfunction MoviesList(){\n//define the movies state \nconst[movies, setMovies] = useState([]);\n\n//get movies json on init \n useEffect( ()=>{\n   setMovies(moviesData.map(  \n       (movie)=> \n         new MovieModel(movie.MovieName, \n             movie.LengthInMinutes,\n             movie.PosterImage, \n             movie.Director, \n             movie.MainStars)))},[]);\n\n//prepare the maping of data to card with class model (movies)            \n const moviesCards = movies.map(MovieModel => <MovieCardComponent  MovieModel={MovieModel} />)\n \n\nreturn(\n        <div  className=\"container\">\n        <h1>MOVIES</h1>\n        {moviesCards}\n        </div>\n    )\n}\n\nexport default MoviesList;","// generate one card\n\nfunction PersonCardComponent({PersonModel}){\n\n  const pathPre = process.env.PUBLIC_URL;\n\n  const  imgsrc = pathPre +\"/\" + PersonModel.Image; //pathPre.concat(PersonModel.Image);\n\n    return(\n      <div className=\"col-md-auto\">\n        <div className=\"card\">\n            <img src={imgsrc} className=\"card-img-top imgCard\" alt={PersonModel.FirstName} />\n            <div className=\"card-body\">\n                 <h5 className=\"card-title\">{PersonModel.FirstName} {PersonModel.LastName}</h5>\n                 <p className=\"card-text\">\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-outline-dark btn-sm\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      window.location.href=PersonModel.Link;\n                      }}\n                > Click here</button>\n\n                \n                    <br/>\n                    Age: {PersonModel.age}\n                 </p>\n            </div>\n  \n        </div>\n      </div>\n    )\n  }\n  \n\n  export default PersonCardComponent;\n  ","class PersonModel {\n    constructor(FirstName, LastName, BirthDay, Image, Link) {\n        this.FirstName = FirstName;\n        this.LastName = LastName;\n        this.BirthDay = BirthDay;\n        this.Image = Image;\n        this.Link = Link;\n      \n        this.age = this.CalcAge(this.BirthDay);\n    }\n\n    CalcAge(BirthDay) {\n        var today = new Date();\n        var datestamp = Date.parse(BirthDay);\n        var birthDate = new Date(datestamp);\n        var age = today.getFullYear() - birthDate.getFullYear();\n        return age;\n    }\n \n}\n\nexport default PersonModel ;\n","function cardsLine( {cardsLine}){\n    return(\n        <div  className=\"container row justify-content-md-center services\">\n                {cardsLine}\n         </div>\n    )\n\n}\n\nexport default cardsLine;","import { useEffect, useState } from 'react';\nimport PersonCardComponent from '../pCard.jsx';\nimport PersonModel from '../model/personClass.jsx';\n//import LocalNavBar from './localNavBar.jsx';\n// import axios from 'axios';\nimport usersData from '../persons.json';\nimport CardsLine from './Cards/CardsLine.jsx'; \n\n// This page renders when :  http://localhost:3000/#/Persons\n\n\n\nfunction PersonCards(props){\n\n  // const pathPre = process.env.PUBLIC_URL; //define server path\n  // const [users, getUsers] = useState(); //prepare the state \n\n  const [filterText, setFilterText] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"fname\");\n\n\n  // const tempArray = [\n  //   new PersonModel(\"Dianna\", \"Ross\", \"10/20/1971\", \"images/p1.jpg\",\"http://ynet.com\"),\n  //   new PersonModel(\"Dean\", \"Martin\", \"11/20/1978\", \"images/p2.jpg\",\"http://ynet.com\")\n  //  ]; \n\n    //get users data from api(json)\n    const[persons, setPersons] = useState ([]);\n  \n    useEffect( ()=>{\n        setPersons(usersData.map(  \n            (person)=> \n              new PersonModel(person.FirstName, \n                              person.LastName, \n                              person.BirthDay, \n                              person.Image, \n                              person.Link)))},[]);\n\n\n    \n    // 1) Filter the actors based on the filterText\n    const filtererdActors = persons.filter(actor => \n      actor.FirstName.toLowerCase().includes(filterText.toLowerCase()) || \n      actor.LastName.toLowerCase().includes(filterText.toLowerCase()));\n\n    // 2) Sort the actors array\n    filtererdActors.sort((actor1, actor2) => {\n      if (actor1[sortBy] > actor2[sortBy]) {\n        return 1;\n      } else if (actor1[sortBy] < actor2[sortBy]) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n\n\n    const cardsLine = filtererdActors.map(PersonModel => <PersonCardComponent  PersonModel={PersonModel} />)\n    \n    \n    return(\n     \n      <div> \n          {/* local nav bar with search , better of as a standalone,  but doesnt work here that way  */}\n     \n{/* \n        this need to be seperated to the search part and the nav part\n        and the search part is goinf to be a part of this page and the navbar part is going to be a seperated \n        component that is goint to be above the hash routing */}\n\n\n       \n                        <form className=\"d-flex\">\n                        <input type=\"text\" placeholder=\"Filter actors\" value={filterText}\n                              onChange={e => setFilterText(e.target.value)}/>\n                        <select value={sortBy} \n                                onChange={e => setSortBy(e.target.value)}\n                                className=\"form-control\">\n                              <option value=\"fname\">First Name</option>\n                              <option value=\"lname\">Last Name</option>\n                        </select>\n                            \n                        </form>\n                    \n        {/* end nav bar */}\n\n        \n\n        <CardsLine cardsLine={cardsLine}/>\n\n      </div>\n    );\n  \n  }\n\n  export default PersonCards;","function HomePage(){\n    return(\n        <div className=\"container\">\n            Home Page\n            <br/>\n            An ex in react routing\n        </div>\n    )\n\n}\n\nexport default HomePage;","import {HashRouter, Link,  Route, Switch} from 'react-router-dom';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./assets/style/style.css\";\n\n//import components\nimport MoviesList from './pages/Movies/MoviesList.jsx';\nimport PersonCards from './pages/PersonCards';\nimport HomePage from './pages/HomePage.jsx';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n        {/* <CardsComponent/> */}\n        \n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\"> \n            <div className=\"container-fluid\">\n              <HashRouter>\n                  <Link className=\"btn navbar-brand\" to=\"/\">HOME</Link>\n              </HashRouter>\n                 \n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" \n                        data-bs-target=\"#navbarNavAltMarkup\" \n                        aria-controls=\"navbarNavAltMarkup\" \n                        aria-expanded=\"false\" \n                        aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                    <div className=\"navbar-nav\">\n                    <HashRouter>\n                      {/* instead of using a href */}\n                       <Link className=\"btn\" to=\"/Persons\">Persons</Link>\n                       <Link className=\"btn\" to=\"/MoviesList\">Movie List</Link>\n                    </HashRouter>   \n                    </div>\n                </div>\n            </div>\n        </nav>\n       \n\n        <HashRouter>\n            <Switch>\n            <Route exact path=\"/\"> <HomePage/> </Route>\n              <Route exact path=\"/Persons\"> <PersonCards/> </Route>\n              <Route exact path=\"/MoviesList\"> <MoviesList/> </Route>\n            </Switch>\n        </HashRouter>\n       \n      </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}